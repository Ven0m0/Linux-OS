# .github/workflows/super-linter.yml
name: Super-Linter

on:
  workflow_dispatch:
  #pull_request:

jobs:
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest
    # Set permissions for the GitHub token
    permissions:
      contents: read          # To checkout the code
      pull-requests: write  # To push fixes back to the PR
      statuses: write       # To post status checks
    steps:
      # Step 1: Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch the full history to enable proper linter analysis on changed files
          fetch-depth: 0
      # Step 2: Run the Super-Linter action
      - name: Run Super-Linter
        uses: super-linter/super-linter@v6
        env:
          # --- Core Settings ---
          # The GITHUB_TOKEN is required for API calls
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # --- Behavior ---
          # Lint only new and updated files for efficiency on pull requests
          VALIDATE_ALL_CODEBASE: false

          # --- Filtering ---
          # Ignore common directories and files that shouldn't be linted
          IGNORE_GITIGNORED_FILES: true
          IGNORE_GENERATED_FILES: true
          FILTER_REGEX_EXCLUDE: '^(?:dist|vendor|node_modules|\\.git|cache)/'

          # --- Rules ---
          # Looks for linter config files (e.g., .shellcheckrc) in the repo root
          LINTER_RULES_PATH: .

      # Step 3: Commit and push any automatic fixes made by the linter
      - name: Commit and push linting fixes
        # This step only runs on pull request events
        if: github.event_name == 'pull_request'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "style(lint): apply automatic fixes"
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
