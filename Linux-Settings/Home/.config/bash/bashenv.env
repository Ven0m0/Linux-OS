#!/bin/bash
# shellcheck shell=bash

# Rust
if command -v cargo &>/dev/null; then
  export CARGO_HOME="${HOME}/.cargo" RUSTUP_HOME="${HOME}/.rustup"
  export CARGO_HTTP_MULTIPLEXING=true CARGO_NET_GIT_FETCH_WITH_CLI=true 
  export CARGO_HTTP_SSL_VERSION=tlsv1.3 CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse
fi

export FIGNORE=argo.lock
export RUST_LOG=off

if [ -e "$HOME/.cargo/bin" ]; then
  PATH="${HOME}/.cargo/bin:${PATH}"
fi

command -v sccache &>/dev/null && export RUSTC_WRAPPER=sccache
command -v gix &>/dev/null && export GITOXIDE_CORE_MULTIPACKINDEX=true GITOXIDE_HTTP_SSLVERSIONMAX=tls1.3 GITOXIDE_HTTP_SSLVERSIONMIN=tls1.2

# Wayland
if [ -n $XDG_SESSION_TYPE = "wayland"]; then
  export QT_QPA_PLATFORMTHEME=qt6ct
  export GDK_BACKEND=wayland
  export QT_QPA_PLATFORM=wayland
  export ELECTRON_OZONE_PLATFORM_HINT=auto
  export SDL_VIDEODRIVER=wayland
  export QT_QPA_PLATFORM=wayland
  export MOZ_ENABLE_XINPUT2=1
  export MOZ_ENABLE_WAYLAND=1
fi

# Make Python use UTF-8 encoding for output to stdin, stdout, and stderr.
export PYTHONIOENCODING='UTF-8'
export PYTHONOPTIMIZE=2

# Java
export JAVA_OPTS="-Xmx2G -Dfile.encoding=UTF-8"
-XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockExperimentalVMOptions -XX:+UnlockDiagnosticVMOptions 

# export JAVA_HOME=""

export LC_CTYPE=C LC_COLLATE=C

# Rust-parallel
command -v rust-parallel &>/dev/null && export PROGRESS_STYLE=simple

# Bins
#if [ -d "${HOME}/bin" ] && [[ ":$PATH:" != *":${HOME}/bin:"* ]]; then
  #export PATH="${HOME}/bin:${PATH}"
#fi
# Inline
[[ -d "${HOME}/bin" && ":$PATH:" != *":${HOME}/bin:"* ]] && export PATH="${HOME}/bin:${PATH}"

# Path dedupe
PATH=$(echo "$PATH" | awk -v RS=: '!($0 in a) {a[$0]; printf("%s%s", length(a) > 1 ? ":" : "", $0)}')
export PATH

# Cache
command -v buildcache &>/dev/null && export BUILDCACHE_COMPRESS_FORMAT=ZSTD BUILDCACHE_DIRECT_MODE=true
command -v ccache &>/dev/null && export CCACHE_COMPRESS=true CCACHE_COMPRESSLEVEL=3 CCACHE_INODECACHE=true

ARCH="$(uname -m)"
SHELL=/usr/bin/bash

