# https://wiki.archlinux.org/title/Makepkg

DLAGENTS=('file::/usr/bin/curl-rustls -qgC - -o %o %u'
          'ftp::/usr/bin/aria2c -q -x 3 -s 7 -j 7 --event-poll=epoll -R --max-tries=5 -t 15 -allow-overwrite=true -c -o %o %u'
          'http::/usr/bin/aria2c --conf-path=$HOME/.config/aria2/aria2.conf -o %o %u'
          'https::/usr/bin/aria2c --conf-path=$HOME/.config/aria2/aria2.conf -o %o %u'

CFLAGS="-march=native -mtune=native -O3 -pipe -flto -fno-plt -fopenmp -pthread -fno-semantic-interposition -fdata-sections -ffunction-sections -ffp-contract=fast -fvisibility=hidden"

RUSTFLAGS="-C opt-level=3 -C target-cpu=native -C codegen-units=1 -C debuginfo=0 -C lto=on -C embed-bitcode=yes -C strip=symbols -Z tune-cpu=native -Z dylib-lto -Zdefault-visibility=hidden"
LDFLAGS="-fuse-ld=mold -Wl,-O3 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro \
         -Wl,-z,now -Wl,-gc-sections \
         -Wl,-z,pack-relative-relocs -Wl,-mllvm,-fp-contract=fast"

BUILDENV=(ccache polly rice-clang)
OPTIONS=(strip !docs !libtool !staticlibs !emptydirs zipman purge !debug lto !autodeps optipng svgo)

PKGBUILD:
options=('strip' '!docs' 'zipman' '!debug' 'lto' 'optipng' 'svgo')

MAKEFLAGS="-j$(($(nproc) + 1))"
NINJAFLAGS="-j$(nproc) -l$(nproc)"

MAKEFLAGS="-j$(($(nproc) - 1))"
NINJAFLAGS="-j$(($(nproc) - 1))"

BUILDENV=(!distcc color ccache check !sign polly)
BUILDDIR=/tmp/makepkg

OPTIONS=(strip !docs !libtool !staticlibs emptydirs zipman purge !debug lto !autodeps optipng svgo)
INTEGRITY_CHECK=(b2)

OPTIPNGFLAGS=" -o7 -zm1-9 -strip all"
SVGOFLAGS="--multipass"

# Crabz
COMPRESSGZ=(crabz -p 16 -f gzip -o - -)

COMPRESSGZ=(pigz -c -f -n)
COMPRESSXZ=(xz -c -z -q -T0 -)
COMPRESSZST=(zstd -c -z -q -T0 --auto-threads=logical -)
COMPRESSBZ2=(lbzip2 -c -f)
COMPRESSLZ=(plzip -c -f)

PKGEXT='.pkg.tar.lz4'


Binary size, perf:
-fjump-tables -fvirtual-function-elimination -fmerge-all-constants

Binary size:
-fshort-enums -fshort-wchar -fminimize-whitespace
-fforce-emit-vtables -fvisibility-global-new-delete-hidden
#
-shared-libgcc

Agressive optimizations:
-fassumptions -ffinite-loops
-fapprox-func -fexcess-precision=fast
-fassociative-math
-fstrict-aliasing -fstrict-enums -fstrict-vtable-pointers

LTO:
-fwhole-program-vtables
# Speedup
-fsplit-lto-unit

Polly:
-mllvm -polly
# -mllvm -polly-vectorizer=polly
-mllvm -polly-vectorizer=polly-modern
-mllvm -polly-parallel # only with -fopenmp
-mllvm -polly-tiling
-mllvm -polly-fusion
-mllvm -polly-invariant-load-hoisting
-mllvm -polly-run-dce
-mllvm -polly-opt-isl
# Cachyos
-mllvm -polly-ast-use-context
-mllvm -polly-invariant-load-hoisting
#-mllvm -polly-opt-fusion=max
-mllvm -polly-loopfusion-greedy
-mllvm -polly-run-inliner
-mllvm -polly-vectorizer=stripmine


-floop-interchange

GPU:
-fgpu-approx-transcendentals


Math library:
Intel LLVM (better)
-fveclib=SVML

Built-in GLIBC (2nd best)
-fveclib=libmvec

Faster build time:
-ffrontend-optimize

Wasm (Firefox):
--wasm-opt

LLD:
# Might be webassembly only
--compress-relocations

Cflags other:
https://github.com/AdelKS/LinuxGamingGuide?tab=readme-ov-file#flags-to-try
GRAPHITE="-fgraphite-identity -floop-strip-mine"
MISC="-fno-semantic-interposition -floop-nest-optimize -fipa-pta"
LTO3="-flto -fdevirtualize-at-ltrans -flto-partition=one"
